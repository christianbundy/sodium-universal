var exec = require('child_process').execSync
var path = require('path')
var os = require('os')
var fs = require('fs')

const parentDirectory = path.join(require.resolve('sodium-native'), `../prebuilds/${os.platform()}-${os.arch()}`)
const fileName = fs.readdirSync(parentDirectory).find((f) => f.startsWith('libsodium'))
const filePath = path.join(parentDirectory, fileName)

var symbols = exec(`nm --dynamic "${filePath}"`).toString().trim().split('\n')
var native = new Set(Object.keys(require('sodium-native')))
var js = new Set(Object.keys(require('sodium-javascript')))

symbols = symbols
  .map((line) => ({ type: line[17], name: line.slice(19)}))
  .filter(({ type, name }) => ['D', 'T', 'W'].includes(type) && name.startsWith('_') === false)
  .map(({ name }) => name.replace(/_[^_]*bytes.*/, (s) => s.toUpperCase()))
  .sort((a, b) => a.toLowerCase() < b.toLowerCase())

var missing = []

console.log(`
<!-- Generated by build-scripts/symbols.js with
     sodium-native@${require('sodium-native/package.json').version}
     sodium-javascript@${require('sodium-javascript/package.json').version} -->\
`)

const max = symbols.filter(s => native.has(s) || js.has(s)).map(s => s.length).reduce((a, b) => Math.max(a, b))
const lines = ':-' + ''.padEnd(max, '--') + '-:'
const center = s => s.padStart(Math.floor((max + s.length) / 2), ' ').padEnd(max, ' ')

console.log(`|  ${center('C Library Symbol')}  |   \`sodium-native\`    | \`sodium-javascript\`  |`)
console.log(`|${lines}|:--------------------:|:--------------------:|`)

for (var i = 0; i < symbols.length; i++) {
  var s = symbols[i]
  if (!(native.has(s) || js.has(s))) missing.push(s)
  else console.log(`| \`${(s + '`').padEnd(max + 1, ' ')} | ${native.has(s) ? ' :white_check_mark: ' : ':small_red_triangle:'} | ${js.has(s) ? ' :white_check_mark: ' : ':small_red_triangle:'} |`)
}

console.log('\n### Missing altogether (Ctrl + F friendly)\n')
console.log(missing.map(s => '`' + s + '`').join(', '))
